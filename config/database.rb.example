
ENV["MYSQL_USER"] ||= "phantom_dc"
ENV["MYSQL_PASSWORD"] ||= ENV["DB_ENV_MYSQL_APP_PASSWORD"]
ENV["MYSQL_HOST"] ||= ENV["DB_PORT_3306_TCP_ADDR"]

ENV["MYSQL_TEST_USER"] ||= "phantom_dc"
ENV["MYSQL_TEST_PASSWORD"] ||= ENV["DB_ENV_MYSQL_APP_PASSWORD"]
ENV["MYSQL_TEST_HOST"] ||= ENV["DB_PORT_3306_TCP_ADDR"]

ActiveRecord::Base.configurations[:development] = {
  :adapter => 'mysql2',
  :encoding  => 'utf8',
  :reconnect => true,
  :database  => ENV['MYSQL_DATABASE'] || 'phantom_dc_development',
  :pool      => 100,
  :username  => ENV['MYSQL_USER'],
  :password  => ENV['MYSQL_PASSWORD'] || '',
  :host      => ENV['MYSQL_HOST'] || '127.0.0.1'
}

ActiveRecord::Base.configurations[:production] = {
  :adapter => 'mysql2',
  :encoding  => 'utf8',
  :reconnect => true,
  :database  => ENV['MYSQL_DATABASE'] || 'phantom_dc_production',
  :pool      => 100,
  :username  => ENV['MYSQL_USER'],
  :password  => ENV['MYSQL_PASSWORD'] || '',
  :host      => ENV['MYSQL_HOST'] || '127.0.0.1'
}

ActiveRecord::Base.configurations[:test] = {
  :adapter => 'mysql2',
  :encoding  => 'utf8',
  :reconnect => true,
  :database  => 'phantom_dc_test',
  :pool      => 100,
  :username  => ENV['MYSQL_TEST_USER'],
  :password  => ENV['MYSQL_TEST_PASSWORD'] || '',
  :host      => ENV['MYSQL_TEST_HOST'] || '127.0.0.1'
}

# Setup our logger
ActiveRecord::Base.logger = logger

# Raise exception on mass assignment protection for Active Record models.
if ActiveRecord::VERSION::MAJOR.to_i < 4
  # Raise exception on mass assignment protection for Active Record models.
  ActiveRecord::Base.mass_assignment_sanitizer = :strict

  # Log the query plan for queries taking more than this (works
  # with SQLite, MySQL, and PostgreSQL).
  ActiveRecord::Base.auto_explain_threshold_in_seconds = 0.5
end

# Include Active Record class name as root for JSON serialized output.
ActiveRecord::Base.include_root_in_json = false

# Store the full class name (including module namespace) in STI type column.
ActiveRecord::Base.store_full_sti_class = true

# Use ISO 8601 format for JSON serialized times and dates.
ActiveSupport.use_standard_json_time_format = true

# Don't escape HTML entities in JSON, leave that for the #json_escape helper
# if you're including raw JSON in an HTML page.
ActiveSupport.escape_html_entities_in_json = false

# Now we can establish connection with our db.
ActiveRecord::Base.establish_connection(ActiveRecord::Base.configurations[Padrino.env])
